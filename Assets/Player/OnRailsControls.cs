//------------------------------------------------------------------------------
// <auto-generated>
//     This code was auto-generated by com.unity.inputsystem:InputActionCodeGenerator
//     version 1.3.0
//     from Assets/Player/OnRailsControls.inputactions
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections;
using System.Collections.Generic;
using UnityEngine.InputSystem;
using UnityEngine.InputSystem.Utilities;

public partial class @OnRailsControls : IInputActionCollection2, IDisposable
{
    public InputActionAsset asset { get; }
    public @OnRailsControls()
    {
        asset = InputActionAsset.FromJson(@"{
    ""name"": ""OnRailsControls"",
    ""maps"": [
        {
            ""name"": ""OnRailsMap"",
            ""id"": ""f4ac6cdd-fa27-486b-8fd4-2a3128f28ac2"",
            ""actions"": [
                {
                    ""name"": ""Jump"",
                    ""type"": ""Button"",
                    ""id"": ""0eee9dc1-5845-4375-9f28-6cfc53f68c62"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Up"",
                    ""type"": ""Button"",
                    ""id"": ""245f2b58-85fa-4f4b-b558-b94671407350"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Down"",
                    ""type"": ""Button"",
                    ""id"": ""f22a9eea-32ef-41b9-ad4f-51a417baf04e"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                }
            ],
            ""bindings"": [
                {
                    ""name"": """",
                    ""id"": ""1043b7ac-856a-487b-b766-3512b3abe90f"",
                    ""path"": ""<Keyboard>/space"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Jump"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""696a90a8-bab8-44ad-b3e7-6fec4c59ad6e"",
                    ""path"": ""<SwitchProControllerHID>/buttonEast"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Jump"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""ecfa0803-5c53-4885-9f76-0fa91323a2c2"",
                    ""path"": ""<Keyboard>/upArrow"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Up"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""ebccdd70-e8be-4c6c-a24d-fa52b270b76a"",
                    ""path"": ""<Keyboard>/w"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Up"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""35d74c8d-9c3f-492d-a6c7-81a07fd99a4f"",
                    ""path"": ""<Keyboard>/leftArrow"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Up"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""d494f4c4-a174-4a76-8c25-cb62066ef89c"",
                    ""path"": ""<Keyboard>/a"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Up"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""d73a3835-1a0d-4d1e-b1d2-92ce51d9191f"",
                    ""path"": ""<Keyboard>/downArrow"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Down"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""ecf3bc73-4df3-4e60-a64c-832f450e2517"",
                    ""path"": ""<Keyboard>/rightArrow"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Down"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""2733453b-5983-43e5-ad36-c9a099a9a016"",
                    ""path"": ""<Keyboard>/s"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Down"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""f3cffb23-b1f3-4995-92ba-205fa250152d"",
                    ""path"": ""<Keyboard>/d"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Down"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                }
            ]
        }
    ],
    ""controlSchemes"": [
        {
            ""name"": ""OnRailsScheme"",
            ""bindingGroup"": ""OnRailsScheme"",
            ""devices"": []
        }
    ]
}");
        // OnRailsMap
        m_OnRailsMap = asset.FindActionMap("OnRailsMap", throwIfNotFound: true);
        m_OnRailsMap_Jump = m_OnRailsMap.FindAction("Jump", throwIfNotFound: true);
        m_OnRailsMap_Up = m_OnRailsMap.FindAction("Up", throwIfNotFound: true);
        m_OnRailsMap_Down = m_OnRailsMap.FindAction("Down", throwIfNotFound: true);
    }

    public void Dispose()
    {
        UnityEngine.Object.Destroy(asset);
    }

    public InputBinding? bindingMask
    {
        get => asset.bindingMask;
        set => asset.bindingMask = value;
    }

    public ReadOnlyArray<InputDevice>? devices
    {
        get => asset.devices;
        set => asset.devices = value;
    }

    public ReadOnlyArray<InputControlScheme> controlSchemes => asset.controlSchemes;

    public bool Contains(InputAction action)
    {
        return asset.Contains(action);
    }

    public IEnumerator<InputAction> GetEnumerator()
    {
        return asset.GetEnumerator();
    }

    IEnumerator IEnumerable.GetEnumerator()
    {
        return GetEnumerator();
    }

    public void Enable()
    {
        asset.Enable();
    }

    public void Disable()
    {
        asset.Disable();
    }
    public IEnumerable<InputBinding> bindings => asset.bindings;

    public InputAction FindAction(string actionNameOrId, bool throwIfNotFound = false)
    {
        return asset.FindAction(actionNameOrId, throwIfNotFound);
    }
    public int FindBinding(InputBinding bindingMask, out InputAction action)
    {
        return asset.FindBinding(bindingMask, out action);
    }

    // OnRailsMap
    private readonly InputActionMap m_OnRailsMap;
    private IOnRailsMapActions m_OnRailsMapActionsCallbackInterface;
    private readonly InputAction m_OnRailsMap_Jump;
    private readonly InputAction m_OnRailsMap_Up;
    private readonly InputAction m_OnRailsMap_Down;
    public struct OnRailsMapActions
    {
        private @OnRailsControls m_Wrapper;
        public OnRailsMapActions(@OnRailsControls wrapper) { m_Wrapper = wrapper; }
        public InputAction @Jump => m_Wrapper.m_OnRailsMap_Jump;
        public InputAction @Up => m_Wrapper.m_OnRailsMap_Up;
        public InputAction @Down => m_Wrapper.m_OnRailsMap_Down;
        public InputActionMap Get() { return m_Wrapper.m_OnRailsMap; }
        public void Enable() { Get().Enable(); }
        public void Disable() { Get().Disable(); }
        public bool enabled => Get().enabled;
        public static implicit operator InputActionMap(OnRailsMapActions set) { return set.Get(); }
        public void SetCallbacks(IOnRailsMapActions instance)
        {
            if (m_Wrapper.m_OnRailsMapActionsCallbackInterface != null)
            {
                @Jump.started -= m_Wrapper.m_OnRailsMapActionsCallbackInterface.OnJump;
                @Jump.performed -= m_Wrapper.m_OnRailsMapActionsCallbackInterface.OnJump;
                @Jump.canceled -= m_Wrapper.m_OnRailsMapActionsCallbackInterface.OnJump;
                @Up.started -= m_Wrapper.m_OnRailsMapActionsCallbackInterface.OnUp;
                @Up.performed -= m_Wrapper.m_OnRailsMapActionsCallbackInterface.OnUp;
                @Up.canceled -= m_Wrapper.m_OnRailsMapActionsCallbackInterface.OnUp;
                @Down.started -= m_Wrapper.m_OnRailsMapActionsCallbackInterface.OnDown;
                @Down.performed -= m_Wrapper.m_OnRailsMapActionsCallbackInterface.OnDown;
                @Down.canceled -= m_Wrapper.m_OnRailsMapActionsCallbackInterface.OnDown;
            }
            m_Wrapper.m_OnRailsMapActionsCallbackInterface = instance;
            if (instance != null)
            {
                @Jump.started += instance.OnJump;
                @Jump.performed += instance.OnJump;
                @Jump.canceled += instance.OnJump;
                @Up.started += instance.OnUp;
                @Up.performed += instance.OnUp;
                @Up.canceled += instance.OnUp;
                @Down.started += instance.OnDown;
                @Down.performed += instance.OnDown;
                @Down.canceled += instance.OnDown;
            }
        }
    }
    public OnRailsMapActions @OnRailsMap => new OnRailsMapActions(this);
    private int m_OnRailsSchemeSchemeIndex = -1;
    public InputControlScheme OnRailsSchemeScheme
    {
        get
        {
            if (m_OnRailsSchemeSchemeIndex == -1) m_OnRailsSchemeSchemeIndex = asset.FindControlSchemeIndex("OnRailsScheme");
            return asset.controlSchemes[m_OnRailsSchemeSchemeIndex];
        }
    }
    public interface IOnRailsMapActions
    {
        void OnJump(InputAction.CallbackContext context);
        void OnUp(InputAction.CallbackContext context);
        void OnDown(InputAction.CallbackContext context);
    }
}
